plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs.kotlin'
    id "org.jetbrains.kotlin.kapt"
}
group='com.github.washul'
version="0.0.1"

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
    }
}
dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation ("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation ('androidx.core:core-ktx:1.3.0')
    implementation ('androidx.appcompat:appcompat:1.1.0')

    implementation 'com.github.jitpack:gradle-simple:1.0'

//    ConstraintLayout
    implementation ('androidx.constraintlayout:constraintlayout:1.1.3')

//    Meterial Design
    implementation ('com.google.android.material:material:1.2.0')

//    DATA BINDING
    kapt ("com.android.databinding:compiler:3.1.4")

    // Kotlin Navigation
    implementation ("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation ("androidx.navigation:navigation-ui-ktx:$nav_version")
    implementation ("androidx.fragment:fragment:1.3.1")

    //    Piccaso
    implementation ('com.squareup.picasso:picasso:2.5.2')
    implementation ('androidx.legacy:legacy-support-v4:1.0.0')
    implementation ('androidx.lifecycle:lifecycle-livedata-ktx:2.2.0')


//Dagger - Hilt
    implementation ("com.google.dagger:hilt-android:2.28-alpha")
    kapt ("com.google.dagger:hilt-android-compiler:2.28-alpha")
    implementation ("androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02")
    kapt ("androidx.hilt:hilt-compiler:1.0.0")
    api ("com.google.guava:guava:24.1-android")

//    Auth
    implementation ('com.google.firebase:firebase-auth:19.4.0')
    implementation ('com.google.android.gms:play-services-auth:18.1.0')
    implementation ('com.facebook.android:facebook-android-sdk:latest.release')
    implementation 'com.facebook.android:facebook-login:latest.release'


    //VIEW_MODEL
    implementation ("androidx.lifecycle:lifecycle-extensions:2.2.0")
    implementation ("androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0")
    implementation ("androidx.lifecycle:lifecycle-runtime-ktx:2.2.0")
    implementation ("androidx.lifecycle:lifecycle-runtime:2.2.0")
    implementation ("androidx.lifecycle:lifecycle-livedata-ktx:2.2.0")

    //Coroutines Lifecycle Scopes
    implementation ("androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0")
    implementation ("androidx.lifecycle:lifecycle-runtime-ktx:2.2.0")

    // ROOM
    def room_version = "2.3.0"
    implementation ("androidx.room:room-runtime:$room_version")
    implementation ('androidx.legacy:legacy-support-v4:1.0.0')
    kapt ("androidx.room:room-compiler:$room_version")

    //   RETROFIT
    def retrofit_version = "2.6.1"
    api ("com.squareup.retrofit2:retrofit:$retrofit_version")
    api ("com.squareup.retrofit2:converter-gson:$retrofit_version")
    api ("com.squareup.retrofit2:adapter-rxjava2:$retrofit_version")

    //    OPENPAY
//    compileOnly project(':openpay-v2.0.3')
////    api 'com.android.support:support-v13:28.0.0'
//    compileOnly ('com.google.http-client:google-http-client:1.28.0')
//    compileOnly ('com.google.http-client:google-http-client-android:1.28.0')
//    compileOnly ('com.google.http-client:google-http-client-jackson2:1.28.0')
//    compileOnly ('com.fasterxml.jackson.core:jackson-core:2.9.8')
    
}

//tasks.register("initConfig", Copy) {
//    println("Init config of Login project:::")
//    println("Copy wsl-services.json file from: $rootDir/app/wsl-services.json")
//    try {
//        def jsonFile = file("$rootDir/app/wsl-services.json")
//        println(jsonFile.text)
//        new File("$projectDir/src/main/assets", "wsl-services.json").text = jsonFile.text
//        println("Copy file completed succesfully")
//    } catch (Exception e) {
//        e.printStackTrace()
//        println(e.toString())
//    }
//}
